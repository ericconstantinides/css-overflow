@import
  "variables",
  "mixins",
  "layout";
body {
  background: whitesmoke;
  position: relative;
  // &:before {
  //   content: "";
  //   position: absolute;
  //   top: 0;
  //   bottom: 0;
  //   left: 50%;
  //   width: $body-width;
  //   transform: translateX(-50%);
  //   outline: 1px dashed #999;
  //   z-index: 1;
  //   pointer-events: none;
  // }
  // &:after {
  //   content: "";
  //   position: absolute;
  //   top: 0;
  //   bottom: 0;
  //   left: 50%;
  //   width: $site-width;
  //   transform: translateX(-50%);
  //   outline: 1px dashed #999;
  //   z-index: 1;
  //   pointer-events: none;
  // }
}
.site-container,
.body-container {
  outline: 1px dashed #ccc;
  background: white;
}
//—————————————————————————————————————————————————————————————————————
// CSS Overflow
//—————————————————————————————————————————————————————————————————————
// Here's what the CSS Overflow does:
// CSS Overflow encourages overlap! Overlap to your pleasure. CSS Overflow will bend for you.
// CSS Overflow keeps BODY text within the the $site-width, while extend automatically extending images
// all the way out to the viewport borders.
// CSS Overflow is in a flexbox container with min height of 55vmin (so just over half of vh or vw)
//
// Here's how it works:
// CSS Overflow works because we have a few (newer) things at our disposal:
// $site-sidth
// CSS calc (this is the killer feature)
// vw (viewport width) (this is also a killer feature)
// media-queries (this is also a killer feature)
//
// When we're INSIDE the $site-width, body and image percentages are essentially taken at face value.
// When we're OUTSIDE the $site-width, body and image percentages are (calc)ulated as
//
// The Structure:
//
// ──.css-overflow (plus classes below)
//         │
//         ├─.css-overflow__body
//         └─.css-overflow__image-container
//                 └─img
//
// .css-overflow classes:
//    .has-image-left         = image left (body right):
//    .has-image-right        = image right (body left):
//    .has-image-width-25p    = image width 25%:
//    .has-image-width-33_3p  = image width 33.3%:
//    .has-image-width-40p    = image width 40%:
//    .has-image-width-50p    = image width 50%:
//    .has-image-width-60p    = image width 60%:
//    .has-image-width-66_6p  = image width 66.6%:
//    .has-image-width-75p    = image width 75%:
//    .has-body-width-25p     = body width  25%   (optional. body defaults filling rest of css-overflow)
//    .has-body-width-33_3p   = body width  33.3% (optional. body defaults filling rest of css-overflow)
//    .has-body-width-40p     = body width  40%   (optional. body defaults filling rest of css-overflow)
//    .has-body-width-50p     = body width  50%   (optional. body defaults filling rest of css-overflow)
//    .has-body-width-60p     = body width  60%   (optional. body defaults filling rest of css-overflow)
//    .has-body-width-66_6p   = body width  66.6% (optional. body defaults filling rest of css-overflow)
//    .has-body-width-75p     = body width  75%   (optional. body defaults filling rest of css-overflow)
//    .is-vertical            = ignores widths and displays image then body
//    .has-body-top           = moves body text to the top instead of center in css-overflow
//
//  The following are distinct classes from above that will overflow a single element:
//
//  Structure and classes:
//
// ──.css-overflow--full-browser-width     = overflows out to the entire viewport
// ──.css-overflow--site-container-width   = overflows out to the $site-width
// ──.css-overflow--inner-body-width       = overflows out to the $body-width
//
// The Variables in make-css-overflow:
//
// $image-percentage: the percentage that the image takes up
// $body-percentage: the percentage that the body takes up.
//
@mixin make-css-overflow($image-percentage, $body-percentage: 0) {
  $image-ratio: $image-percentage / 100%;
  @if $body-percentage == 0 {
    $body-percentage: 100% - $image-percentage;
  }
  $body-ratio: $body-percentage / 100%;

  // if we have overlap:
  @if $body-ratio + $image-ratio > 1.01 {
    align-items: center;
  }

  // @if $body-percentage != 0 {
    &.has-image-right .css-overflow__body {
      margin-right: 100% - $body-percentage - $image-percentage;
    }
    &.has-image-left .css-overflow__body {
      margin-left: 100% - $body-percentage - $image-percentage;
    }
  // }
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Inside Site container
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  @media only screen and (max-width: $bp-medium) {
    @if $image-ratio > .49 {
      .css-overflow__image-container { width: $image-percentage - 7.5%; }
      @if $body-percentage != 0 {
        .css-overflow__body { width: $body-percentage + 7.5%; }
      }
    }
    @else {
      .css-overflow__image-container { width: $image-percentage; }
      @if $body-percentage != 0 {
        .css-overflow__body { width: $body-percentage; }
      }
    }
  }
  @media only screen and (min-width: $bp-medium + 1) {
    .css-overflow__image-container { width: $image-percentage; }
    @if $body-percentage != 0 {
      .css-overflow__body { width: $body-percentage; }
    }
  }
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Wider than site-container:
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  @media only screen and (min-width: $site-width + 1) {
    .css-overflow__image-container { width: calc(50% + ( #{$site-width} * (#{$image-ratio} - 0.5) ) ); }
    @if $body-percentage != 0 {
      .css-overflow__body { width: $site-width * $body-ratio; }
      &.has-image-right .css-overflow__body {
        margin-right: $site-width - ($site-width * $body-ratio) - ($site-width * $image-ratio);
      }
      &.has-image-left .css-overflow__body {
        margin-left: $site-width - ($site-width * $body-ratio) - ($site-width * $image-ratio);
      }
    }
    @else {
      .css-overflow__body { width: $site-width * (1 - $image-ratio); }
    }
  }
}

.css-overflow {
  display: flex;
  position: relative;
  min-height: 55vmin;
  &.is-vertical {
    flex-flow: column;
    .css-overflow__image-container img {
      position: static;
    }
    .css-overflow__title {
      max-width: 750px;
      margin-left: auto;
      margin-right: auto;
    }
  }
}
.css-overflow__body {
  padding: 1.25em 1em;
  position: relative;
  ul,li {
    margin: 0;
    padding: 0;
  }
  li {
    text-align: center;
    list-style: none;
    margin-bottom: 0.75em;
  }
}
.css-overflow__image-container {
  align-self: stretch;
  position: relative;
  img {
    object-fit: cover;
    object-position: top center;
    width: 100%;
    height: 100%;
  }
}
@media only screen and (min-width: $bp-medium-small + 1) {
  .css-overflow {
    align-items: center;
    &.has-image-left {flex-flow: row nowrap; }
    &.has-image-right {flex-flow: row-reverse nowrap; justify-content: flex-end; }
    &.is-vertical { flex-flow: column; }

    &.has-image-width-25p                        { @include make-css-overflow(25.00%); }
    &.has-image-width-25p.has-body-width-25p     { @include make-css-overflow(25.00%, 25.00%); }
    &.has-image-width-25p.has-body-width-33_3p   { @include make-css-overflow(25.00%, 33.33%); }
    &.has-image-width-25p.has-body-width-40p     { @include make-css-overflow(25.00%, 40.00%); }
    &.has-image-width-25p.has-body-width-50p     { @include make-css-overflow(25.00%, 50.00%); }
    &.has-image-width-25p.has-body-width-60p     { @include make-css-overflow(25.00%, 60.00%); }
    &.has-image-width-25p.has-body-width-66_6p   { @include make-css-overflow(25.00%, 66.67%); }
    &.has-image-width-25p.has-body-width-75p     { @include make-css-overflow(25.00%, 75.00%); }
    &.has-image-width-33_3p                      { @include make-css-overflow(33.33%); }
    &.has-image-width-33_3p.has-body-width-25p   { @include make-css-overflow(33.33%, 25.00%); }
    &.has-image-width-33_3p.has-body-width-33_3p { @include make-css-overflow(33.33%, 33.33%); }
    &.has-image-width-33_3p.has-body-width-40p   { @include make-css-overflow(33.33%, 40.00%); }
    &.has-image-width-33_3p.has-body-width-50p   { @include make-css-overflow(33.33%, 50.00%); }
    &.has-image-width-33_3p.has-body-width-60p   { @include make-css-overflow(33.33%, 60.00%); }
    &.has-image-width-33_3p.has-body-width-66_6p { @include make-css-overflow(33.33%, 66.67%); }
    &.has-image-width-33_3p.has-body-width-75p   { @include make-css-overflow(33.33%, 75.00%); }
    &.has-image-width-40p                        { @include make-css-overflow(40.00%); }
    &.has-image-width-40p.has-body-width-25p     { @include make-css-overflow(40.00%, 25.00%); }
    &.has-image-width-40p.has-body-width-33_3p   { @include make-css-overflow(40.00%, 33.33%); }
    &.has-image-width-40p.has-body-width-40p     { @include make-css-overflow(40.00%, 40.00%); }
    &.has-image-width-40p.has-body-width-50p     { @include make-css-overflow(40.00%, 50.00%); }
    &.has-image-width-40p.has-body-width-60p     { @include make-css-overflow(40.00%, 60.00%); }
    &.has-image-width-40p.has-body-width-66_6p   { @include make-css-overflow(40.00%, 66.67%); }
    &.has-image-width-40p.has-body-width-75p     { @include make-css-overflow(40.00%, 75.00%); }
    &.has-image-width-50p                        { @include make-css-overflow(50.00%); }
    &.has-image-width-50p.has-body-width-25p     { @include make-css-overflow(50.00%, 25.00%); }
    &.has-image-width-50p.has-body-width-33_3p   { @include make-css-overflow(50.00%, 33.33%); }
    &.has-image-width-50p.has-body-width-40p     { @include make-css-overflow(50.00%, 40.00%); }
    &.has-image-width-50p.has-body-width-50p     { @include make-css-overflow(50.00%, 50.00%); }
    &.has-image-width-50p.has-body-width-60p     { @include make-css-overflow(50.00%, 60.00%); }
    &.has-image-width-50p.has-body-width-66_6p   { @include make-css-overflow(50.00%, 66.67%); }
    &.has-image-width-50p.has-body-width-75p     { @include make-css-overflow(50.00%, 75.00%); }
    &.has-image-width-60p                        { @include make-css-overflow(60.00%);}
    &.has-image-width-60p.has-body-width-25p     { @include make-css-overflow(60.00%, 25.00%); }
    &.has-image-width-60p.has-body-width-33_3p   { @include make-css-overflow(60.00%, 33.33%); }
    &.has-image-width-60p.has-body-width-40p     { @include make-css-overflow(60.00%, 40.00%); }
    &.has-image-width-60p.has-body-width-50p     { @include make-css-overflow(60.00%, 50.00%); }
    &.has-image-width-60p.has-body-width-60p     { @include make-css-overflow(60.00%, 60.00%); }
    &.has-image-width-60p.has-body-width-66_6p   { @include make-css-overflow(60.00%, 66.67%); }
    &.has-image-width-60p.has-body-width-75p     { @include make-css-overflow(60.00%, 75.00%); }
    &.has-image-width-66_6p                      { @include make-css-overflow(66.67%);}
    &.has-image-width-66_6p.has-body-width-25p   { @include make-css-overflow(66.67%, 25.00%); }
    &.has-image-width-66_6p.has-body-width-33_3p { @include make-css-overflow(66.67%, 33.33%); }
    &.has-image-width-66_6p.has-body-width-40p   { @include make-css-overflow(66.67%, 40.00%); }
    &.has-image-width-66_6p.has-body-width-50p   { @include make-css-overflow(66.67%, 50.00%); }
    &.has-image-width-66_6p.has-body-width-60p   { @include make-css-overflow(66.67%, 60.00%); }
    &.has-image-width-66_6p.has-body-width-66_6p { @include make-css-overflow(66.67%, 66.67%); }
    &.has-image-width-66_6p.has-body-width-75p   { @include make-css-overflow(66.67%, 75.00%); }
    &.has-image-width-75p                        { @include make-css-overflow(75.00%); }
    &.has-image-width-75p.has-body-width-25p     { @include make-css-overflow(75.00%, 25.00%); }
    &.has-image-width-75p.has-body-width-33_3p   { @include make-css-overflow(75.00%, 33.33%); }
    &.has-image-width-75p.has-body-width-40p     { @include make-css-overflow(75.00%, 40.00%); }
    &.has-image-width-75p.has-body-width-50p     { @include make-css-overflow(75.00%, 50.00%); }
    &.has-image-width-75p.has-body-width-60p     { @include make-css-overflow(75.00%, 60.00%); }
    &.has-image-width-75p.has-body-width-66_6p   { @include make-css-overflow(75.00%, 66.67%); }
    &.has-image-width-75p.has-body-width-75p     { @include make-css-overflow(75.00%, 75.00%); }

    &.has-body-top { align-items: flex-start; }
  }
  .css-overflow__image-container {
    width: 100%;
    img {
      position: absolute;
    }
  }
  .css-overflow__body {
    background-color: rgba(white,0.75);
  }
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Wider than site-container:
// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@media only screen and (min-width: $site-width + 1) {
  .css-overflow {
    justify-content: flex-start;
    &.has-image-right,
    &.has-image-left {
      justify-content: flex-start;
    }
  }
}

@media only screen and (max-width: $bp-medium-small) {
  .css-overflow {
    flex-flow: column;
    .css-overflow__image-container {
      width: 100%;
    }
    .css-overflow__body {
      width: 100%;
      padding-left: $body-padding;
      padding-right: $body-padding;
    }
  }
}



//—————————————————————————————————————————————————————————————————————
// Full Browser Width
// Site Container Width
// Inner Body Width
//—————————————————————————————————————————————————————————————————————
// full-width makes something full width, regardless of it's container or site-padding
// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Full Browser Width
// This always extends to the outer edge of the viewport,
// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.css-overflow--full-browser-width {
  width: 100vw;
  max-width: none;
  // convert the em padding to pixels (should be done smarter to test if it's ems)
  $px-padding: ((($body-padding * 2) / 1em) * $default-em-size);
  @media only screen and (max-width: $body-width + $px-padding ) {
    margin-left: $body-padding * -1;
  }
  @media only screen and (min-width: $body-width + $px-padding + 1px ) {
    margin-left: calc((50vw - (#{$body-width} / 2)) * -1);
  }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Site Container Width
// This always extends to the contained width of the site
// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.css-overflow--site-container-width {
  max-width: none;
  $px-site-padding: ((($site-padding * 2) / 1em) * $default-em-size);
  $px-body-padding: ((($body-padding * 2) / 1em) * $default-em-size);
  @media only screen and (max-width: $site-width) {
    // this is the site-container and in
    $half-body-width: $body-width / 2;
    $this-margin: $half-body-width + ($px-site-padding / 2);
    width: 100vw;
    margin-left: calc((50vw - #{$half-body-width}) * -1);
  }
  @media only screen and (max-width: $body-width + $px-body-padding ) {
    // this is the body container and in
    width: 100vw;
    margin-left: $body-padding * -1;
  }
  @media only screen and (min-width: $site-width + 1px) {
    // this is the outer one:
    width: $site-width;
    margin-left: (($site-width - $body-width) / -2);
  }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Inner Body Width
// This always extends to the contained width of the body
// - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.css-overflow--inner-body-width {
  width: 100%;
  $px-padding: ((($body-padding * 2) / 1em) * $default-em-size);
  @media only screen and (max-width: $body-width) {
    width: 100vw;
    max-width: $body-width + ($px-padding * 2);
    margin-left: $body-padding * -1;
  }
  // this is the tweener period between the full width and the site padding:
  @media only screen and (min-width: $body-width + 1px ) and (max-width: $body-width + $px-padding + 1px ) {
    $this-margin: ($body-width / 2) + ($px-padding / 2);
    width: $body-width;
    max-width: none;
    margin-left: calc((50vw - #{$this-margin}));
  }
}
@media only screen and (max-width: $bp-medium-large) and (orientation: landscape) {
  div.media.media-element-container {
    width: 100%;
    max-width: 100%;
    margin-left: 0;
  }
}